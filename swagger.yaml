openapi: 3.0.0
info:
    title: Nogwari
    version: 1.0.0
    description: "Nogwari swagger"
servers:
    - url: /
      description: Local development server
paths:
    /board:
        get:
            summary: "전체 게시글 조회"
            tags: [Board]
            parameters:
                - in: query
                  name: page
                  type: integer
                  description: "page 번호 / defalut = 1"
                - in: query
                  name: list_num
                  type: integer
                  description: "item 개수 / defalut = 5"
                - in: query
                  name: category
                  type: integer
                  description: "category 번호 / 기입안할시 전체 게시글 검색"
            responses:
                "200":
                    description: 게시글 조회 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Board"
        post:
            summary: "게시글 추가"
            security:
                - bearerAuth: []
            tags: [Board]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CreateBoard"
            responses:
                "201":
                    description: 게시글 추가 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Board"
                "401":
                    description: 인증 실패
    /board/search:
        get:
            summary: "게시글 검색"
            tags: [Board]
            parameters:
                - in: query
                  name: page
                  type: integer
                  description: "page 번호 / defalut = 1"
                - in: query
                  name: list_num
                  type: integer
                  description: "item 개수 / defalut = 5"
                - in: query
                  name: searchType
                  type: string
                  description: "제목검색 - title / 작성자검색 - nickname "
                - in: query
                  name: keyword
                  type: string
                  description: "searchType에 대한 keyword값"
            responses:
                "200":
                    description: 게시글 목록 검색 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Board"
                "400":
                    description: searchType/keyword 값 미존재
                "404":
                    description: 검색된 데이터 없음
    /board/ishit/{id}:
        get:
            summary: "게시물 따봉 확인"
            security:
                - bearerAuth: []
            tags: [Board]
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "게시글의 ID값을 받아 따봉(hits) 확인"
            responses:
                "200":
                    description: 게시글 따봉 확인(true -> 따봉되어있는 상태 / false -> 따봉 안되어 있는 상태)
                "401":
                    description: 권한 없음
                "404":
                    description: 해당 게시글 미존재
    /board/hits/{id}:
        get:
            summary: "게시물 따봉"
            security:
                - bearerAuth: []
            tags: [Board]
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "게시글의 ID값을 받아 따봉(hits) 증가"
            responses:
                "200":
                    description: 게시글 따봉 성공
                "400":
                    description: 해당 user은 이미 따봉 눌렀습니다.
                "401":
                    description: 권한 없음
                "404":
                    description: 해당 게시글 미존재
    /board/unhits/{id}:
        get:
            summary: "게시물 따봉 취소"
            security:
                - bearerAuth: []
            tags: [Board]
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "게시글의 ID값을 받아 따봉(hits) 확인후, 있다면 따봉 감소"
            responses:
                "200":
                    description: 게시글 따봉 취소 성공
                "400":
                    description: 해당 user는 따봉 누르지 않은 상태
    /board/report/{id}:
        post:
            summary: "게시글 신고"
            tags: [Board]
            security:
                - bearerAuth: []
            consumes:
                - application/json
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "게시글의 ID"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                reason:
                                    type: string
            responses:
                "201":
                    description: 게시글 신고 성공
                "400":
                    description: 이미 신고 했음
                "401":
                    description: 인증 실패
                "404":
                    description: 해당 게시글 미존재
    /board/{id}:
        get:
            summary: "단일 게시글 조회"
            tags: [Board]
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "게시글의 ID값으로 서칭"
            responses:
                "200":
                    description: 게시글 조회 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Board"
                "404":
                    description: 해당 게시글 미존재
        put:
            summary: "게시글 수정"
            security:
                - bearerAuth: []
            tags: [Board]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/UpdateBoard"
            consumes:
                - application/json
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "게시글의 ID값으로 서칭"
            responses:
                "200":
                    description: 게시글 수정 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Board"
                "401":
                    description: 인증 실패
                "403":
                    description: 수정 권한 없음
                "404":
                    description: 해당 게시글 미존재
        delete:
            summary: "단일 게시글 삭제"
            security:
                - bearerAuth: []
            tags: [Board]
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "게시글의 ID값으로 서칭"
            responses:
                "204":
                    description: 게시글 삭제 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Board"
                "401":
                    description: 인증 실패
                "403":
                    description: 삭제 권한 없음
                "404":
                    description: 해당 게시글 미존재
    /board/upload:
        post:
            summary: "이미지 변경"
            tags: [Board]
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                image:
                                    type: string
                                    format: binary
            responses:
                200:
                    description: Image uploaded successfully
                400:
                    description: Bad request
    /auth/me:
        get:
            summary: "로그인 확인"
            security:
                - bearerAuth: []
            tags: [Auth]
            responses:
                "200":
                    description: 로그인 확인 완료
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    nickname:
                                        type: string
                                    email:
                                        type: string
                                    img:
                                        type: string
                "401":
                    description: Authentication Error
                "404":
                    description: 해당 로그인 정보 없음
    /auth/signup:
        post:
            summary: "회원가입"
            tags: [Auth]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Signup"
            responses:
                "201":
                    description: 회원가입 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Signup"
                "401":
                    description: 회원가입 실패
    /auth/mailsubmit:
        post:
            summary: "인증키 메일 전송"
            tags: [Auth]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/MailSubmit"
            responses:
                "200":
                    description: 메일전송 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/MailSubmit"
                "404":
                    description: 메일 찾을 수 없음
    /auth/checkkey:
        post:
            summary: "인증키 확인"
            tags: [Auth]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/VerifyKey"
            responses:
                "200":
                    description: 인증키 확인 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/VerifyKey"
                "404":
                    description: 인증키 불일치
    /auth/login:
        post:
            summary: "로그인"
            tags: [Auth]
            consumes:
                - application/json
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Login"
            responses:
                "200":
                    description: 로그인 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Auth"
                "401":
                    description: 로그인 실패
    /user/updatenick:
        put:
            summary: "닉네임 변경"
            tags: [User]
            security:
                - bearerAuth: []
            consumes:
                - application/json
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                nickname:
                                    type: string
            responses:
                "200":
                    description: 닉네임변경 성공
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    nickname:
                                        type: string
                "401":
                    description: 닉네임변경 실패
    /user/withdrawal:
        delete:
            summary: "회원탈퇴"
            tags: [User]
            security:
                - bearerAuth: []
            consumes:
                - application/json
            responses:
                "200":
                    description: 회원탈퇴 성공
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    id:
                                        type: integer
                                        format: int64
                "401":
                    description: 토큰이 제대로 안 들어가져있음
    /user/mypost:
        get:
            summary: "내가 쓴 글 조회"
            tags: [User]
            security:
                - bearerAuth: []
            consumes:
                - application/json
            responses:
                "200":
                    description: 회원탈퇴 성공
                "401":
                    description: 토큰이 제대로 안 들어가져있음
    /user/upload:
        post:
            summary: "이미지 변경"
            tags: [User]
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                image:
                                    type: string
                                    format: binary
            responses:
                200:
                    description: Image uploaded successfully
                400:
                    description: Bad request
    /category:
        get:
            summary: "전체 카테고리 조회"
            tags: [Category]
            responses:
                "200":
                    description: 카테고리 조회 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"
                "404":
                    description: 카테고리 찾을 수 없음
        post:
            summary: "카테고리 추가"
            security:
                - bearerAuth: []
            tags: [Category]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/PostCategory"
            responses:
                "201":
                    description: 카테고리 추가 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Category"
                "401":
                    description: 인증 실패
    /category/{id}:
        delete:
            summary: "카테고리 삭제"
            security:
                - bearerAuth: []
            tags: [Category]
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "게시글의 ID값으로 서칭"
            responses:
                "200":
                    description: 카테고리 삭제 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Board"
                "401":
                    description: 인증 실패
                "403":
                    description: 삭제 권한 없음
                "404":
                    description: 해당 게시글 미존재
    /comment/{id}:
        get:
            summary: "댓글 받아오기"
            tags: [Comment]
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "게시글의 ID값으로 서칭"
            responses:
                "200":
                    description: 댓글 받아오기 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                            example:
                                comment:
                                    - id: 1
                                      boardId: 8
                                      userId: 1
                                      content: "댓글예시"
                                      hits: 0
                                      reported: 1
                                      createdAt: "2023-08-28T07:09:08.000Z"
                                      updatedAt: "2023-08-28T07:09:19.000Z"
                                      parentCommentsId: 0
                                      userNickname: "nick1"
                                      userImg: null
                                      userGrade: "grade1"
                                reply:
                                    - id: 1
                                      boardId: 8
                                      userId: 1
                                      content: "답글예시"
                                      hits: 0
                                      reported: 1
                                      createdAt: "2023-08-28T07:09:08.000Z"
                                      updatedAt: "2023-08-28T07:09:19.000Z"
                                      parentCommentsId: 0
                                      userNickname: "nick1"
                                      userImg: null
                                      userGrade: "grade1"
                "204":
                    description: 게시글에 댓글 없음
                "404":
                    description: 해당 게시글 미존재
        post:
            summary: "댓글 쓰기"
            tags: [Comment]
            security:
                - bearerAuth: []
            consumes:
                - application/json
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "게시글의 ID값으로 서칭"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
            responses:
                "201":
                    description: 댓글 쓰기 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                "401":
                    description: 인증 실패
                "404":
                    description: 해당 게시글 미존재
        put:
            summary: "댓글 수정"
            tags: [Comment]
            security:
                - bearerAuth: []
            consumes:
                - application/json
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "댓글의 ID값으로 서칭"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
            responses:
                "200":
                    description: 댓글 수정 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                "400":
                    description: 수정 희망 인원과 댓글 작성 인원이 다름
                "401":
                    description: 인증 실패
                "404":
                    description: 해당 댓글 미존재
        delete:
            summary: "댓글 삭제"
            tags: [Comment]
            security:
                - bearerAuth: []
            consumes:
                - application/json
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "댓글의 ID값으로 서칭"
            responses:
                "204":
                    description: 댓글 삭제 성공
                "400":
                    description: 삭제 희망 인원과 댓글 작성 인원이 다름
                "401":
                    description: 인증 실패
                "404":
                    description: 해당 댓글 미존재
    /comment/reply/{id}:
        post:
            summary: "답글 쓰기"
            tags: [Comment]
            security:
                - bearerAuth: []
            consumes:
                - application/json
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "게시글의 ID값으로 서칭"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
                                parentCommentId:
                                    type: integer
                                    format: int64
            responses:
                "201":
                    description: 댓글 쓰기 성공
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Comment"
                "401":
                    description: 인증 실패
                "404":
                    description: 해당 게시글 미존재
    /comment/report/{id}:
        post:
            summary: "댓글 신고"
            tags: [Comment]
            security:
                - bearerAuth: []
            consumes:
                - application/json
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "댓글의 ID"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                reason:
                                    type: string
            responses:
                "201":
                    description: 댓글 신고 성공
                "400":
                    description: 이미 신고 했음
                "401":
                    description: 인증 실패
                "404":
                    description: 해당 댓글 미존재
    /comment/ishit/{id}:
        get:
            summary: "댓글 따봉 확인"
            security:
                - bearerAuth: []
            tags: [Comment]
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "댓글의 ID값을 받아 따봉(hits) 확인"
            responses:
                "200":
                    description: 댓글 따봉 확인(true -> 따봉되어있는 상태 / false -> 따봉 안되어 있는 상태)
                "401":
                    description: 권한 없음
                "404":
                    description: 해당 게시글 미존재
    /comment/hits/{id}:
        get:
            summary: "댓글 따봉"
            security:
                - bearerAuth: []
            tags: [Comment]
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "댓글의 ID값을 받아 따봉(hits) 증가"
            responses:
                "200":
                    description: 댓글 따봉 성공
                "400":
                    description: 해당 user은 이미 따봉 눌렀습니다.
                "401":
                    description: 권한 없음
                "404":
                    description: 해당 게시글 미존재
    /comment/unhits/{id}:
        get:
            summary: "댓글 따봉 취소"
            security:
                - bearerAuth: []
            tags: [Comment]
            parameters:
                - in: path
                  name: id
                  required: true
                  type: integer
                  minimun: 1
                  description: "댓글의 ID값을 받아 따봉(hits) 확인후, 있다면 따봉 감소"
            responses:
                "200":
                    description: 댓글 따봉 취소 성공
                "400":
                    description: 해당 user는 따봉 누르지 않은 상태
                "401":
                    description: 권한 없음
                "404":
                    description: 해당 게시글 미존재
components:
    schemas:
        Board:
            required:
                - id
                - title
            properties:
                id:
                    type: integer
                    format: int64
                title:
                    type: string
                content:
                    type: string
                views:
                    type: integer
                    format: int64
                hits:
                    type: integer
                    format: int64
                reported:
                    type: integer
                    format: int64
                thumbnail:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                userId:
                    type: integer
                    format: int64
                categoryId:
                    type: integer
                    format: int64
                userNickname:
                    type: string
                userImg:
                    type: string
                userGrade:
                    type: string
                categoryName:
                    type: string
        CreateBoard:
            properties:
                title:
                    type: string
                content:
                    type: string
                categoryId:
                    type: int64
                imageUrl:
                    type: string
        UpdateBoard:
            properties:
                title:
                    type: string
                content:
                    type: string
                hiddenNum:
                    type: string
                categoryId:
                    type: int64
        Auth:
            properties:
                token:
                    type: string
                email:
                    type: string
                expriesInSec:
                    type: int64
        Category:
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                post_num:
                    type: integer
                    format: int64
        PostCategory:
            propertirs:
                name:
                    type: string
        Signup:
            properties:
                password:
                    type: string
                nickname:
                    type: string
                email:
                    type: string
                img:
                    type: string
        Login:
            properties:
                email:
                    type: string
                password:
                    type: string
        MailSubmit:
            properties:
                email:
                    type: string
        VerifyKey:
            properties:
                email:
                    type: string
                verifyKey:
                    type: string
        Comment:
            required:
                - id
                - boardId
                - userId
                - content
            properties:
                id:
                    type: integer
                    format: int64
                content:
                    type: string
                hits:
                    type: integer
                    format: int64
                reported:
                    type: integer
                    format: int64
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                userId:
                    type: integer
                    format: int64
                boardId:
                    type: integer
                    format: int64
                parentCommentsId:
                    type: integer
                    format: int64
                userNickname:
                    type: string
                userImg:
                    type: string
                userGrade:
                    type: string
        Error:
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
